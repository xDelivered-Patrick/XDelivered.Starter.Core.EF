<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <DockerComposeProjectPath>..\docker-compose.dcproj</DockerComposeProjectPath>
    <UserSecretsId>c0b10f2a-3c6b-45b3-8f37-50e6645ce21c</UserSecretsId>
    <AssemblyName>XDelivered.Starter.Core.EF</AssemblyName>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Autofac" Version="4.8.1" />
    <PackageReference Include="Autofac.Extensions.DependencyInjection" Version="4.3.0" />
    <PackageReference Include="EntityFramework" Version="6.2.0" />
    <PackageReference Include="Microsoft.AspNet.Identity.EntityFramework" Version="2.2.2" />
    <PackageReference Include="Microsoft.AspNet.Identity.Owin" Version="2.2.2" />
    <PackageReference Include="Microsoft.AspNet.WebApi.Client" Version="5.2.6" />
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="2.1.1" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="2.1.4" />
    <PackageReference Include="Microsoft.Extensions.PlatformAbstractions" Version="1.1.0" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.1.1" />
    <PackageReference Include="NSwag.CodeGeneration.TypeScript" Version="11.20.1" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="3.0.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.Annotations" Version="3.0.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.Swagger" Version="3.0.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerGen" Version="3.0.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerUI" Version="3.0.0" />
    <PackageReference Include="Swashbuckle.Core" Version="5.6.0" />
    <PackageReference Include="xDelivered.Common" Version="1.0.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="ClientApp\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="ClientApp\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Remove="ClientApp\**" />
    <None Remove="ClientApp\**" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="ClientApp\.angular-cli.json" />
    <Content Include="ClientApp\package-lock.json" />
    <Content Include="ClientApp\package.json" />
    <Content Include="ClientApp\src\app\components\app.component.css" />
    <Content Include="ClientApp\src\app\components\app.component.html" />
    <Content Include="ClientApp\src\app\components\counter\counter.component.html" />
    <Content Include="ClientApp\src\app\components\fetch-data\fetch-data.component.html" />
    <Content Include="ClientApp\src\app\components\home\home.component.html" />
    <Content Include="ClientApp\src\app\components\login\login.component.html" />
    <Content Include="ClientApp\src\app\components\nav-menu\nav-menu.component.css" />
    <Content Include="ClientApp\src\app\components\nav-menu\nav-menu.component.html" />
    <Content Include="ClientApp\src\app\components\register\register.component.html" />
    <Content Include="ClientApp\src\index.html" />
    <Content Include="ClientApp\src\styles.css" />
    <Content Include="ClientApp\src\tsconfig.app.json" />
    <Content Include="ClientApp\src\tsconfig.spec.json" />
    <Content Include="ClientApp\tsconfig.json" />
    <Content Include="ClientApp\tslint.json" />
  </ItemGroup>

  <ItemGroup>
    <None Include="ClientApp\.editorconfig" />
    <None Include="ClientApp\.gitignore" />
    <None Include="ClientApp\karma.conf.js" />
    <None Include="ClientApp\protractor.conf.js" />
    <None Include="ClientApp\README.md" />
    <None Include="ClientApp\src\assets\.gitkeep" />
    <None Include="ClientApp\src\assets\js\functions.js" />
    <None Include="ClientApp\src\assets\js\jquery.js" />
    <None Include="ClientApp\src\assets\js\plugins.js" />
    <None Include="ClientApp\src\clientapi\nswagconfig.nswag" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\app.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\app.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\baseComponent.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\counter\counter.component.spec.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\counter\counter.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\fetch-data\fetch-data.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\home\home.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\login\login.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\nav-menu\nav-menu.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\register\register.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\authService.ts" />
    <TypeScriptCompile Include="ClientApp\src\clientapi\client.extensions.ts" />
    <TypeScriptCompile Include="ClientApp\src\clientapi\client.ts" />
    <TypeScriptCompile Include="ClientApp\src\environments\environment.prod.ts" />
    <TypeScriptCompile Include="ClientApp\src\environments\environment.ts" />
    <TypeScriptCompile Include="ClientApp\src\main.ts" />
    <TypeScriptCompile Include="ClientApp\src\polyfills.ts" />
    <TypeScriptCompile Include="ClientApp\src\test.ts" />
    <TypeScriptCompile Include="ClientApp\src\typings.d.ts" />
  </ItemGroup>

  <ItemGroup>
    <Content Update="appsettings.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <None Update="SwaggerProject.xml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**; $(SpaRoot)build-ssr\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
